// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// Category is the golang structure for table gf_category.
type Category struct {
	Id          uint        `orm:"id,primary"   json:"id"`          // 分类ID，自增主键
	ContentType string      `orm:"content_type" json:"contentType"` // 内容类型：topic, ask, article, reply
	Key         string      `orm:"key"          json:"key"`         // 栏目唯一键名，用于程序部分场景硬编码，一般不会用得到
	ParentId    uint        `orm:"parent_id"    json:"parentId"`    // 父级分类ID，用于层级管理
	UserId      uint        `orm:"user_id"      json:"userId"`      // 创建的用户ID
	Name        string      `orm:"name"         json:"name"`        // 分类名称
	Sort        uint        `orm:"sort"         json:"sort"`        // 排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶
	Thumb       string      `orm:"thumb"        json:"thumb"`       // 封面图
	Brief       string      `orm:"brief"        json:"brief"`       // 简述
	Content     string      `orm:"content"      json:"content"`     // 详细介绍
	CreatedAt   *gtime.Time `orm:"created_at"   json:"createdAt"`   // 创建时间
	UpdatedAt   *gtime.Time `orm:"updated_at"   json:"updatedAt"`   // 修改时间
}

// Content is the golang structure for table gf_content.
type Content struct {
	Id             uint        `orm:"id,primary"       json:"id"`             // 自增ID
	Key            string      `orm:"key"              json:"key"`            // 唯一键名，用于程序硬编码，一般不常用
	Type           string      `orm:"type"             json:"type"`           // 内容模型: topic, ask, article等，具体由程序定义
	CategoryId     uint        `orm:"category_id"      json:"categoryId"`     // 栏目ID
	UserId         uint        `orm:"user_id"          json:"userId"`         // 用户ID
	AdoptedReplyId uint        `orm:"adopted_reply_id" json:"adoptedReplyId"` // 采纳的回复ID，问答模块有效
	Title          string      `orm:"title"            json:"title"`          // 标题
	Content        string      `orm:"content"          json:"content"`        // 内容
	Sort           uint        `orm:"sort"             json:"sort"`           // 排序，数值越低越靠前，默认为添加时的时间戳，可用于置顶
	Brief          string      `orm:"brief"            json:"brief"`          // 摘要
	Thumb          string      `orm:"thumb"            json:"thumb"`          // 缩略图
	Tags           string      `orm:"tags"             json:"tags"`           // 标签名称列表，以JSON存储
	Referer        string      `orm:"referer"          json:"referer"`        // 内容来源，例如github/gitee
	Status         uint        `orm:"status"           json:"status"`         // 状态 0: 正常, 1: 禁用
	ReplyCount     uint        `orm:"reply_count"      json:"replyCount"`     // 回复数量
	ViewCount      uint        `orm:"view_count"       json:"viewCount"`      // 浏览数量
	ZanCount       uint        `orm:"zan_count"        json:"zanCount"`       // 赞
	CaiCount       uint        `orm:"cai_count"        json:"caiCount"`       // 踩
	CreatedAt      *gtime.Time `orm:"created_at"       json:"createdAt"`      // 创建时间
	UpdatedAt      *gtime.Time `orm:"updated_at"       json:"updatedAt"`      // 修改时间
}

// File is the golang structure for table gf_file.
type File struct {
	Id        uint        `orm:"id,primary" json:"id"`        // 自增ID
	Name      string      `orm:"name"       json:"name"`      // 文件名称
	Src       string      `orm:"src"        json:"src"`       // 本地文件存储路径
	Url       string      `orm:"url"        json:"url"`       // URL地址，可能为空
	UserId    uint        `orm:"user_id"    json:"userId"`    // 操作用户
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
}

// Interact is the golang structure for table gf_interact.
type Interact struct {
	Id         uint        `orm:"id,primary"  json:"id"`         // 自增ID
	Type       int         `orm:"type"        json:"type"`       // 操作类型。0:赞，1:踩。
	UserId     uint        `orm:"user_id"     json:"userId"`     // 操作用户
	TargetId   uint        `orm:"target_id"   json:"targetId"`   // 对应内容ID，该内容可能是content, reply
	TargetType string      `orm:"target_type" json:"targetType"` // 内容模型: content, reply, 具体由程序定义
	Count      uint        `orm:"count"       json:"count"`      // 操作数据值
	CreatedAt  *gtime.Time `orm:"created_at"  json:"createdAt"`  //
	UpdatedAt  *gtime.Time `orm:"updated_at"  json:"updatedAt"`  //
}

// Reply is the golang structure for table gf_reply.
type Reply struct {
	Id         uint        `orm:"id,primary"  json:"id"`         // 回复ID
	ParentId   uint        `orm:"parent_id"   json:"parentId"`   // 回复对应的上一级回复ID(没有的话默认为0)
	Title      string      `orm:"title"       json:"title"`      // 回复标题
	Content    string      `orm:"content"     json:"content"`    // 回复内容
	TargetType string      `orm:"target_type" json:"targetType"` // 评论类型: content, reply
	TargetId   uint        `orm:"target_id"   json:"targetId"`   // 对应内容ID，可能回复的是另一个回复，所以这里没有使用content_id
	UserId     uint        `orm:"user_id"     json:"userId"`     // 网站用户ID
	ZanCount   uint        `orm:"zan_count"   json:"zanCount"`   // 赞
	CaiCount   uint        `orm:"cai_count"   json:"caiCount"`   // 踩
	CreatedAt  *gtime.Time `orm:"created_at"  json:"createdAt"`  // 创建时间
	UpdatedAt  *gtime.Time `orm:"updated_at"  json:"updatedAt"`  //
}

// Setting is the golang structure for table gf_setting.
type Setting struct {
	K         string      `orm:"k,primary"  json:"k"`         // 键名
	V         string      `orm:"v"          json:"v"`         // 键值
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` // 创建时间
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` // 更新时间
}

// User is the golang structure for table gf_user.
type User struct {
	Id        uint        `orm:"id,primary"      json:"id"`        // UID
	Passport  string      `orm:"passport,unique" json:"passport"`  // 账号
	Password  string      `orm:"password"        json:"password"`  // MD5密码
	Nickname  string      `orm:"nickname,unique" json:"nickname"`  // 昵称
	Avatar    string      `orm:"avatar"          json:"avatar"`    // 头像地址
	Status    int         `orm:"status"          json:"status"`    // 状态 0:启用 1:禁用
	Gender    int         `orm:"gender"          json:"gender"`    // 性别 0: 未设置 1: 男 2: 女
	CreatedAt *gtime.Time `orm:"created_at"      json:"createdAt"` // 注册时间
	UpdatedAt *gtime.Time `orm:"updated_at"      json:"updatedAt"` // 更新时间
}
