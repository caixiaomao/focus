// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// SettingDao is the manager for logic model data accessing and custom defined data operations functions management.
type SettingDao struct {
	gmvc.M                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      settingColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB         // DB is the raw underlying database management object.
	Table  string         // Table is the underlying table name of the DAO.
}

// SettingColumns defines and stores column names for table gf_setting.
type settingColumns struct {
	K         string // 键名
	V         string // 键值
	CreatedAt string // 创建时间
	UpdatedAt string // 更新时间
}

// NewSettingDao creates and returns a new DAO object for table data access.
func NewSettingDao() *SettingDao {
	columns := settingColumns{
		K:         "k",
		V:         "v",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
	}
	return &SettingDao{
		C:     columns,
		M:     g.DB("default").Model("gf_setting").Safe(),
		DB:    g.DB("default"),
		Table: "gf_setting",
	}
}
